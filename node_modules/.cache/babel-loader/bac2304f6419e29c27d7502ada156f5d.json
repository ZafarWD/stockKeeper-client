{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash9\\\\Desktop\\\\reactProjects\\\\stockKeeper\\\\stockKeeper-client\\\\src\\\\components\\\\common\\\\EditForm.jsx\";\nimport React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\n\nconst renderError = ({\n  error,\n  touched\n}) => {\n  if (error && touched) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, error);\n  }\n};\n\nconst renderInput = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(Input, Object.assign({}, input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })), renderError(meta));\n};\n\nconst renderNumberInput = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(Input, Object.assign({}, input, {\n    type: \"number\",\n    min: \"0\",\n    max: \"2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), meta.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, meta.error));\n};\n\nconst onSubmit = (formValues, DIPATCH, props) => {\n  props.onSubmit(props.id, formValues);\n};\n\nconst EditForm = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"company\",\n    component: renderInput,\n    label: \"Company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"sale\",\n    component: renderNumberInput,\n    label: \"Sale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"stockAddition\",\n    component: renderNumberInput,\n    label: \"Stock Addition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.company) errors.company = \"Not allowed to be empty\";\n\n  if (formValues.sale) {\n    if (parseInt(formValues.sale) > parseInt(formValues.stock)) errors.sale = \"Sale can't be greater than stock\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"editForm\",\n  validate\n})(EditForm);","map":{"version":3,"sources":["C:/Users/yash9/Desktop/reactProjects/stockKeeper/stockKeeper-client/src/components/common/EditForm.jsx"],"names":["React","reduxForm","Field","Form","FormGroup","Label","Input","renderError","error","touched","renderInput","input","label","meta","renderNumberInput","onSubmit","formValues","DIPATCH","props","id","EditForm","handleSubmit","validate","errors","company","sale","parseInt","stock","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst renderError = ({ error, touched }) => {\r\n  if (error && touched) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n};\r\n\r\nconst renderInput = ({ input, label, meta }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label>\r\n        <h4>{label}</h4>\r\n      </Label>\r\n      <Input {...input} />\r\n      {renderError(meta)}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nconst renderNumberInput = ({ input, label, meta }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label>\r\n        <h4>{label}</h4>\r\n      </Label>\r\n      <Input {...input} type=\"number\" min=\"0\" max=\"2000\" />\r\n      {meta.error && <div className=\"alert alert-danger\">{meta.error}</div>}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nconst onSubmit = (formValues, DIPATCH, props) => {\r\n  props.onSubmit(props.id, formValues);\r\n};\r\n\r\nconst EditForm = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={props.handleSubmit(onSubmit)}>\r\n        <Field name=\"company\" component={renderInput} label=\"Company\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <Field name=\"sale\" component={renderNumberInput} label=\"Sale\" />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"stockAddition\"\r\n              component={renderNumberInput}\r\n              label=\"Stock Addition\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-primary\">Submit</button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n  if (!formValues.company) errors.company = \"Not allowed to be empty\";\r\n  if (formValues.sale) {\r\n    if (parseInt(formValues.sale) > parseInt(formValues.stock))\r\n      errors.sale = \"Sale can't be greater than stock\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({ form: \"editForm\", validate })(EditForm);\r\n"]},"metadata":{},"sourceType":"module"}