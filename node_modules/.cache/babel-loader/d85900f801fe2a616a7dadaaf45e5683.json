{"ast":null,"code":"import axios from \"axios\";\nimport history from '../history';\nimport updateForm from \"../utils/updateStocks\";\nconst endPoint = \"http://localhost:4001\";\nexport const fetchPlywoods = () => async dispatch => {\n  const response = await axios.get(`${endPoint}/plywoods`);\n  dispatch({\n    type: \"FETCH_PLYWOODS\",\n    payload: response.data\n  });\n};\nexport const fetchPlywood = id => async dispatch => {\n  const response = await axios.get(`${endPoint}/plywoods/${id}`);\n  dispatch({\n    type: \"FETCH_PLYWOOD\",\n    payload: response.data\n  });\n};\nexport const updatePlywood = (id, formValues) => async dispatch => {\n  const updatedForm = updateForm(formValues);\n  const response = await axios.patch(`${endPoint}/plywoods/${id}`, updatedForm);\n  dispatch({\n    type: \"UPDATE_PLYWOOD\",\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const plyMeasurementSelect = query => {\n  return {\n    type: \"PLY_MEASUREMENT_SELECT\",\n    payload: query\n  };\n};\nexport const plyMmSelect = query => {\n  return {\n    type: \"PLY_MM_SELECT\",\n    payload: query\n  };\n};\nexport const createPlywood = formValues => async dispatch => {\n  const response = await axios.post(`${endPoint}/plywoods`, formValues);\n  dispatch({\n    type: \"CREATE_PLYWOOD\",\n    payload: response.data\n  });\n  history.push('/plywoods');\n};\nexport const deletePlywood = id => async dispatch => {\n  await axios.delete(`${endPoint}/plywoods/${id}`);\n  dispatch({\n    type: \"DELETE_PLYWOOD\",\n    payload: id\n  });\n  history.replace('/');\n};","map":{"version":3,"sources":["C:/Users/yash9/Desktop/reactProjects/stockKeeper/stockKeeper-client/src/actions/index.js"],"names":["axios","history","updateForm","endPoint","fetchPlywoods","dispatch","response","get","type","payload","data","fetchPlywood","id","updatePlywood","formValues","updatedForm","patch","push","plyMeasurementSelect","query","plyMmSelect","createPlywood","post","deletePlywood","delete","replace"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAClD,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEJ,QAAS,WAAtB,CAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,YAAY,GAAIC,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEJ,QAAS,aAAYS,EAAG,EAArC,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA3C,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,aAAa,GAAG,CAACD,EAAD,EAAKE,UAAL,KAAoB,MAAMT,QAAN,IAAkB;AAC/D,QAAMU,WAAW,GAAGb,UAAU,CAACY,UAAD,CAA9B;AACA,QAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACgB,KAAN,CAAa,GAAEb,QAAS,aAAYS,EAAG,EAAvC,EAA0CG,WAA1C,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACAT,EAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACH,CALM;AAOP,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAC3C,SAAO;AAAEX,IAAAA,IAAI,EAAE,wBAAR;AAAkCC,IAAAA,OAAO,EAAEU;AAA3C,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAID,KAAD,IAAW;AAClC,SAAO;AAAEX,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEU;AAAlC,GAAP;AACH,CAFM;AAIP,OAAO,MAAME,aAAa,GAAIP,UAAD,IAAgB,MAAMT,QAAN,IAAmB;AAC5D,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACsB,IAAN,CAClB,GAAEnB,QAAS,WADO,EAEnBW,UAFmB,CAAvB;AAIAT,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,GAAD,CAAR;AACAT,EAAAA,OAAO,CAACgB,IAAR,CAAa,WAAb;AACH,CAPM;AASP,OAAO,MAAMM,aAAa,GAAIX,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACnD,QAAML,KAAK,CAACwB,MAAN,CAAc,GAAErB,QAAS,aAAYS,EAAG,EAAxC,CAAN;AACAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEG;AAAnC,GAAD,CAAR;AACAX,EAAAA,OAAO,CAACwB,OAAR,CAAgB,GAAhB;AACH,CAJM","sourcesContent":["import axios from \"axios\";\r\nimport history from '../history';\r\nimport updateForm from \"../utils/updateStocks\";\r\n\r\nconst endPoint = \"http://localhost:4001\";\r\n\r\nexport const fetchPlywoods = () => async(dispatch) => {\r\n    const response = await axios.get(`${endPoint}/plywoods`);\r\n    dispatch({ type: \"FETCH_PLYWOODS\", payload: response.data });\r\n};\r\n\r\nexport const fetchPlywood = (id) => async dispatch => {\r\n    const response = await axios.get(`${endPoint}/plywoods/${id}`);\r\n    dispatch({ type: \"FETCH_PLYWOOD\", payload: response.data });\r\n};\r\n\r\nexport const updatePlywood = (id, formValues) => async dispatch => {\r\n    const updatedForm = updateForm(formValues);\r\n    const response = await axios.patch(`${endPoint}/plywoods/${id}`, updatedForm);\r\n    dispatch({ type: \"UPDATE_PLYWOOD\", payload: response.data });\r\n    history.push('/');\r\n}\r\n\r\nexport const plyMeasurementSelect = (query) => {\r\n    return { type: \"PLY_MEASUREMENT_SELECT\", payload: query };\r\n};\r\n\r\nexport const plyMmSelect = (query) => {\r\n    return { type: \"PLY_MM_SELECT\", payload: query };\r\n};\r\n\r\nexport const createPlywood = (formValues) => async(dispatch) => {\r\n    const response = await axios.post(\r\n        `${endPoint}/plywoods`,\r\n        formValues\r\n    );\r\n    dispatch({ type: \"CREATE_PLYWOOD\", payload: response.data });\r\n    history.push('/plywoods');\r\n};\r\n\r\nexport const deletePlywood = (id) => async dispatch => {\r\n    await axios.delete(`${endPoint}/plywoods/${id}`);\r\n    dispatch({ type: \"DELETE_PLYWOOD\", payload: id });\r\n    history.replace('/');\r\n}"]},"metadata":{},"sourceType":"module"}