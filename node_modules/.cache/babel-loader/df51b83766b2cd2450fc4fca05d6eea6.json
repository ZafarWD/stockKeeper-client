{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash9\\\\Desktop\\\\reactProjects\\\\stockKeeper\\\\stockKeeper-client\\\\src\\\\components\\\\boards\\\\BoardsEdit.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditForm from \"../common/EditForm\";\nimport { updateBoard, fetchBoard } from \"../../actions\";\n\nconst BoardsEdit = ({\n  match,\n  fetchBoard,\n  updateBoard,\n  item\n}) => {\n  const {\n    id\n  } = match.params;\n  useEffect(() => {\n    fetchBoard(id);\n  }, [fetchBoard]);\n\n  const renderHeading = () => {\n    if (item) return /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }\n    }, \"Current Stock: \", item.stock);else return null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Update Stock here...\"), renderHeading(), /*#__PURE__*/React.createElement(EditForm, {\n    initialValues: item && item,\n    onSubmit: updateBoard,\n    id: match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    item: state.boards[ownProps.match.paramas.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBoard,\n  updateBoard\n})(BoardsEdit);","map":{"version":3,"sources":["C:/Users/yash9/Desktop/reactProjects/stockKeeper/stockKeeper-client/src/components/boards/BoardsEdit.jsx"],"names":["React","useEffect","connect","EditForm","updateBoard","fetchBoard","BoardsEdit","match","item","id","params","renderHeading","stock","mapStateToProps","state","ownProps","boards","paramas"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,UAAT;AAAqBD,EAAAA,WAArB;AAAkCI,EAAAA;AAAlC,CAAD,KAA8C;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAASF,KAAK,CAACG,MAArB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,UAAU,CAACI,EAAD,CAAV;AACD,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;;AAIA,QAAMM,aAAa,GAAG,MAAM;AAC1B,QAAIH,IAAJ,EACE,oBAAO;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4CA,IAAI,CAACI,KAAjD,CAAP,CADF,KAEK,OAAO,IAAP;AACN,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEGD,aAAa,EAFhB,eAGE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEH,IAAI,IAAIA,IADzB;AAEE,IAAA,QAAQ,EAAEJ,WAFZ;AAGE,IAAA,EAAE,EAAEG,KAAK,CAACG,MAAN,CAAaD,EAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAWD,CAxBD;;AA0BA,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEP,IAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaD,QAAQ,CAACR,KAAT,CAAeU,OAAf,CAAuBR,EAApC;AAAR,GAAP;AACD,CAFD;;AAIA,eAAeP,OAAO,CAACW,eAAD,EAAkB;AAAER,EAAAA,UAAF;AAAcD,EAAAA;AAAd,CAAlB,CAAP,CACbE,UADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditForm from \"../common/EditForm\";\r\nimport { updateBoard, fetchBoard } from \"../../actions\";\r\n\r\nconst BoardsEdit = ({ match, fetchBoard, updateBoard, item }) => {\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard]);\r\n\r\n  const renderHeading = () => {\r\n    if (item)\r\n      return <h3 className=\"text-center\">Current Stock: {item.stock}</h3>;\r\n    else return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-5\">Update Stock here...</h1>\r\n      {renderHeading()}\r\n      <EditForm\r\n        initialValues={item && item}\r\n        onSubmit={updateBoard}\r\n        id={match.params.id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { item: state.boards[ownProps.match.paramas.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBoard, updateBoard })(\r\n  BoardsEdit\r\n);\r\n"]},"metadata":{},"sourceType":"module"}