{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash9\\\\Desktop\\\\reactProjects\\\\stockKeeper\\\\stockKeeper-client\\\\src\\\\components\\\\boards\\\\BoardsShow.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBoards } from \"../../actions\";\nimport TableHeader from \"../common/TableHeader\";\nimport TableContent from \"../common/TableContent\";\nimport MainHeader from \"../boards/MainHeader\";\nimport mapItemsToQuery from \"../../utils/mapItemsToquery\";\n\nconst BoardsShow = ({\n  fetchBoards,\n  boards,\n  selectedBoardMm,\n  selectedBoardMeasurement\n}) => {\n  useEffect(() => {\n    fetchBoards();\n  }, [fetchBoards]);\n\n  const renderBoards = (array, selectedMeasurement, selectedMm) => {\n    let toRender = mapItemsToQuery(array, selectedMeasurement, \"measurement\");\n    toRender = mapItemsToQuery(toRender, selectedMm, \"mm\");\n    if (!toRender.length) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }, \"Nothing matches...\");else return /*#__PURE__*/React.createElement(TableContent, {\n      array: toRender,\n      type: \"boards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), renderBoards(boards, selectedBoardMeasurement, selectedBoardMm));\n};\n\nconst mapStateToProps = state => {\n  return {\n    boards: Object.values(state.boards),\n    selectedBoardMeasurement: state.boardQuery,\n    selectedBoardMm: state.boardMmQuery\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBoards\n})(BoardsShow);","map":{"version":3,"sources":["C:/Users/yash9/Desktop/reactProjects/stockKeeper/stockKeeper-client/src/components/boards/BoardsShow.jsx"],"names":["React","useEffect","connect","fetchBoards","TableHeader","TableContent","MainHeader","mapItemsToQuery","BoardsShow","boards","selectedBoardMm","selectedBoardMeasurement","renderBoards","array","selectedMeasurement","selectedMm","toRender","length","mapStateToProps","state","Object","values","boardQuery","boardMmQuery"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBL,EAAAA,WADkB;AAElBM,EAAAA,MAFkB;AAGlBC,EAAAA,eAHkB;AAIlBC,EAAAA;AAJkB,CAAD,KAKb;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,QAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,mBAAR,EAA6BC,UAA7B,KAA4C;AAC/D,QAAIC,QAAQ,GAAGT,eAAe,CAACM,KAAD,EAAQC,mBAAR,EAA6B,aAA7B,CAA9B;AACAE,IAAAA,QAAQ,GAAGT,eAAe,CAACS,QAAD,EAAWD,UAAX,EAAuB,IAAvB,CAA1B;AACA,QAAI,CAACC,QAAQ,CAACC,MAAd,EACE,oBAAO;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP,CADF,KAEK,oBAAO,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,QAArB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACN,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGJ,YAAY,CAACH,MAAD,EAASE,wBAAT,EAAmCD,eAAnC,CAHf,CADF;AAOD,CAzBD;;AA2BA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,MAAM,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,MAApB,CADH;AAELE,IAAAA,wBAAwB,EAAEQ,KAAK,CAACG,UAF3B;AAGLZ,IAAAA,eAAe,EAAES,KAAK,CAACI;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAerB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CK,UAA1C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchBoards } from \"../../actions\";\r\nimport TableHeader from \"../common/TableHeader\";\r\nimport TableContent from \"../common/TableContent\";\r\nimport MainHeader from \"../boards/MainHeader\";\r\nimport mapItemsToQuery from \"../../utils/mapItemsToquery\";\r\n\r\nconst BoardsShow = ({\r\n  fetchBoards,\r\n  boards,\r\n  selectedBoardMm,\r\n  selectedBoardMeasurement,\r\n}) => {\r\n  useEffect(() => {\r\n    fetchBoards();\r\n  }, [fetchBoards]);\r\n\r\n  const renderBoards = (array, selectedMeasurement, selectedMm) => {\r\n    let toRender = mapItemsToQuery(array, selectedMeasurement, \"measurement\");\r\n    toRender = mapItemsToQuery(toRender, selectedMm, \"mm\");\r\n    if (!toRender.length)\r\n      return <div className=\"text-center text-danger\">Nothing matches...</div>;\r\n    else return <TableContent array={toRender} type=\"boards\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MainHeader />\r\n      <TableHeader />\r\n      {renderBoards(boards, selectedBoardMeasurement, selectedBoardMm)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boards: Object.values(state.boards),\r\n    selectedBoardMeasurement: state.boardQuery,\r\n    selectedBoardMm: state.boardMmQuery,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBoards })(BoardsShow);\r\n"]},"metadata":{},"sourceType":"module"}