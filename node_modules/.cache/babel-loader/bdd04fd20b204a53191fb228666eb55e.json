{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash9\\\\Desktop\\\\reactProjects\\\\stockKeeper\\\\stockKeeper-client\\\\src\\\\components\\\\common\\\\CreateForm.jsx\";\nimport React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\n\nconst renderError = meta => {\n  if (meta.touched && meta.error) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }\n  }, meta.error);\n};\n\nconst renderSelect = ({\n  input,\n  label,\n  optionList,\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(Input, Object.assign({}, input, {\n    type: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), optionList.map((m, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, m))), renderError(meta));\n};\n\nconst renderInput = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(Input, Object.assign({}, input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), renderError(meta));\n};\n\nconst renderNumberInput = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(Input, Object.assign({}, input, {\n    type: \"number\",\n    max: \"2000\",\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })), renderError(meta));\n};\n\nconst onSubmit = (formValues, DISPATCH, props) => {\n  props.onSubmit(formValues);\n};\n\nconst CreateForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    optionList: props.measurements,\n    name: \"measurement\",\n    component: renderSelect,\n    label: \"Measurement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"mm\",\n    component: renderSelect,\n    label: \"mm\",\n    optionList: props.mmsArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"company\",\n    component: renderInput,\n    label: \"Company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"stock\",\n    component: renderNumberInput,\n    label: \"Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nconst validate = formValues => {\n  const errors = {};\n  const message = `Not allowed to be empty`;\n  if (!formValues.mm) errors.mm = message;\n  if (!formValues.measurement) errors.measurement = message;\n  if (!formValues.stock) errors.stock = message;\n  if (!formValues.company) errors.company = message;\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"createForm\",\n  validate\n})(CreateForm);","map":{"version":3,"sources":["C:/Users/yash9/Desktop/reactProjects/stockKeeper/stockKeeper-client/src/components/common/CreateForm.jsx"],"names":["React","reduxForm","Field","Form","FormGroup","Label","Input","renderError","meta","touched","error","renderSelect","input","label","optionList","map","m","i","renderInput","renderNumberInput","onSubmit","formValues","DISPATCH","props","CreateForm","handleSubmit","measurements","mmsArray","validate","errors","message","mm","measurement","stock","company","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error)\r\n    return <div className=\"alert alert-danger\">{meta.error}</div>;\r\n};\r\n\r\nconst renderSelect = ({ input, label, optionList, meta }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label>\r\n        <h4>{label}</h4>\r\n      </Label>\r\n      <Input {...input} type=\"select\">\r\n        {optionList.map((m, i) => (\r\n          <option key={i}>{m}</option>\r\n        ))}\r\n      </Input>\r\n      {renderError(meta)}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nconst renderInput = ({ input, label, meta }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label>\r\n        <h4>{label}</h4>\r\n      </Label>\r\n      <Input {...input} />\r\n      {renderError(meta)}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nconst renderNumberInput = ({ input, label, meta }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label>\r\n        <h4>{label}</h4>\r\n      </Label>\r\n      <Input {...input} type=\"number\" max=\"2000\" min=\"0\" />\r\n      {renderError(meta)}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nconst onSubmit = (formValues, DISPATCH, props) => {\r\n  props.onSubmit(formValues);\r\n};\r\n\r\nconst CreateForm = (props) => {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Form onSubmit={props.handleSubmit(onSubmit)}>\r\n        <Field\r\n          optionList={props.measurements}\r\n          name=\"measurement\"\r\n          component={renderSelect}\r\n          label=\"Measurement\"\r\n        />\r\n        <Field\r\n          name=\"mm\"\r\n          component={renderSelect}\r\n          label=\"mm\"\r\n          optionList={props.mmsArray}\r\n        />\r\n        <Field name=\"company\" component={renderInput} label=\"Company\" />\r\n        <Field name=\"stock\" component={renderNumberInput} label=\"Stock\" />\r\n        <button className=\"btn btn-primary btn-lg\">Submit</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n  const message = `Not allowed to be empty`;\r\n\r\n  if (!formValues.mm) errors.mm = message;\r\n  if (!formValues.measurement) errors.measurement = message;\r\n  if (!formValues.stock) errors.stock = message;\r\n  if (!formValues.company) errors.company = message;\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({ form: \"createForm\", validate })(CreateForm);\r\n"]},"metadata":{},"sourceType":"module"}